#BlueJ class context
comment0.params=
comment0.target=Punto()
comment0.text=\r\n\ Constructor\ de\ la\ clase\r\n
comment1.params=p_x\ p_y
comment1.target=Punto(double,\ double)
comment1.text=\r\n\ Constructor\ de\ la\ clase\r\n\ \r\n\ @param\ \ \ x,\ y\r\n
comment2.params=
comment2.target=double\ getX()
comment2.text=\r\n\ Devuelve\ x\r\n\ \r\n\ @return\ \ x\r\n
comment3.params=p_x
comment3.target=void\ setX(double)
comment3.text=\r\n\ Establece\ x\r\n\ \r\n\ @param\ \ \ x\r\n
comment4.params=
comment4.target=double\ getY()
comment4.text=\r\n\ Devuelve\ y\r\n\ \r\n\ @return\ \ y\r\n
comment5.params=p_y
comment5.target=void\ setY(double)
comment5.text=\r\n\ Establece\ y\r\n\ \r\n\ @return\ \ y\r\n
comment6.params=p_ptoDistante
comment6.target=double\ distanciaA(Punto)
comment6.text=\r\n\ Calcula\ la\ distancia\ entre\ el\ objeto\ actual\ y\ otro\ que\ recibe\ por\ parametro\r\n\ \r\n\ @param\ \ \ Punto\r\n\ @return\ \ distancia\r\n
comment7.params=p_dx\ p_dy
comment7.target=void\ desplazar(double,\ double)
comment7.text=\r\n\ Desplaza\ x\ e\ y,\ sumando\ nuevos\ valores\r\n\ \r\n\ @param\ \ \ desplazamiento\ de\ x,\ desplazamiento\ de\ y\r\n
comment8.params=
comment8.target=void\ mostrar()
comment8.text=\r\n\ Muestra\ en\ pantalla\ x\ e\ y\r\n
comment9.params=
comment9.target=java.lang.String\ coordenadas()
comment9.text=\r\n\ Devuelve\ las\ coordenadas\ de\ x\ e\ y\r\n\ \r\n\ @return\ \ x,\ y\r\n
numComments=10
